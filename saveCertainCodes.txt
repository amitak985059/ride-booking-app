
module.exports.registerUser = async (req, res, next) => {
    const errors = validationResult(req);
    if (!errors.isEmpty()) {
        return res.status(400).json({ errors: errors.array() });
    }
   

    const { fullname, email, password } = req.body;

    const hashPassword = await userModel.hashPassword(password);


    const user = await userService.createUser({
        firstname: fullname.firstname, lastname: fullname.lastname, email, password: hashPassword
    })

    const token = user.generateAuthToken();

    res.status(201).json({user, token})

}


// new chat gpt api which doent fails if same user tries to reregister
module.exports.registerUser = async (req, res, next) => {
    try {
        const errors = validationResult(req);
        if (!errors.isEmpty()) {
            return res.status(400).json({ errors: errors.array() });
        }

        const { fullname, email, password } = req.body;

        // Check if user already exists
        const existingUser = await userModel.findUserByEmail(email);
        if (existingUser) {
            return res.status(400).json({ message: "User already exists with this email" });
        }

        // Hash password
        const hashPassword = await userModel.hashPassword(password);

        // Create user
        const user = await userService.createUser({
            firstname: fullname.firstname,
            lastname: fullname.lastname,
            email,
            password: hashPassword
        });

        // Generate auth token
        const token = user.generateAuthToken();

        res.status(201).json({ user, token });

    } catch (error) {
        if (error.code === 11000) { // MongoDB duplicate key error
            return res.status(400).json({ message: "Email already registered. Please log in." });
        }
        res.status(500).json({ message: "Server Error", error: error.message });
    }
};


const errors = validationResult(req);
    if(!errors.isEmpty()){
        return res.status(400).json({errors: errors.array() });
    }